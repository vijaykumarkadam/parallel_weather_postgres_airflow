
#run one ec2 instance in AWS and run all this commands to up an running airflow
python3 --version
sudo apt update
sudo apt install python3-pip
sudo apt install python3.10-venv
python3 -m venv weather_venv
source weather_venv/bin/activate
pip install boto3
pip install pandas
pip install s3fs
pip install fsspec
pip install apache-airflow-providers-postgres
pip install --upgrade awscli
aws configure
pip install apache-airflow
pip install apache-airflow-providers-http
airflow standalone


#configure postgresql client on ec2 machine
# Create the repository configuration file:
. /etc/os-release
sudo sh -c "echo 'deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $VERSION_CODENAME-pgdg main' > /etc/apt/sources.list.d/pgdg.list"

# Import the repository signing key:
sudo apt install curl ca-certificates
sudo install -d /usr/share/postgresql-common/pgdg
sudo curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc

# Update the package lists:
sudo apt update

# Install the latest version of PostgreSQL:
# If you want a specific version, use 'postgresql-17' or similar instead of 'postgresql'
sudo apt -y install postgresql


#Importing data from Amazon S3 into an RDS for PostgreSQL DB instance
#To install the aws_s3 extension
psql --host=weather-s3-db.c58ywcgae1qy.us-west-2.rds.amazonaws.com --port=5432 --username=postgres --password
CREATE EXTENSION aws_s3 CASCADE;
\dx                         #list of extension

#create IAM role and policy also create bucket
aws aws iam create-role \
    --role-name postgresql-S3-Role-yml-4 \
    --assume-role-policy-document '{"Version": "2012-10-17", "Statement": [{"Effect": "Allow", "Principal": {"Service": "rds.amazonaws.com"}, "Action": "sts:AssumeRole"}]}'

aws aws iam create-policy \
    --policy-name postgresS3Policy-yml-4 \
    --policy-document '{"Version": "2012-10-17", "Statement": [{"Sid": "s3import", "Action": ["s3:GetObject", "s3:ListBucket"], "Effect": "Allow", "Resource": ["arn:aws:s3:::testing-ymlo1234", "arn:aws:s3:::testing-ymlo1234/*"]}]}'

aws aws iam attach-role-policy \
    --policy-arn arn:aws:iam::851725377870:policy/postgresS3Policy-yml-4 \
    --role-name postgresql-S3-Role-yml-4

aws rds add-role-to-db-instance \
   --db-instance-identifier weather-s3-db \
   --feature-name s3Import \
   --role-arn arn:aws:iam::851725377870:role/postgresql-S3-Role-yml-4  \
   --region us-west-2




